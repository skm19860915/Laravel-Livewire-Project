{"version":3,"sources":["webpack:///./resources/js/helper.js","webpack:///./resources/js/patients.js"],"names":["helper","getSiteUrl","window","location","origin","loadStates","statesJsonFile","this","$","getJSON","data","items","each","key","row","selected","state_code","push","state_name","html","join","append","isSafariBrowser","chromeAgent","navigator","userAgent","indexOf","safariAgent","init","dataTable","edit","console","log","formSubmission","on","e","target","find","prop","text","a","appUrl","dataSource","overviewPatient","DataTable","processing","serverSide","ajax","columns","render","type","action","columnDefs","targets","orderable"],"mappings":"mIAAA,qBAEIA,EAAS,CAEXC,WAAY,WACV,OAAOC,OAAOC,SAASC,QAGzBC,WAAY,WACV,IAAIC,EAAiB,GAAH,OAAMC,KAAKN,aAAX,wBAClBO,EAAEC,QAAQH,GAAgB,SAAUI,GAClC,IAAIC,EAAQ,GACZH,EAAEI,KAAKF,GAAM,SAAUG,EAAKC,GAC1B,IAAIC,EAAW,GACXP,EAAE,UAAUE,KAAK,UAAYI,EAAIE,aACnCD,EAAW,YAEbJ,EAAMM,KAAN,yBAA6BH,EAAIE,WAAjC,aAAgDD,EAAhD,YAA4DD,EAAII,WAAhE,iBAGF,IAAIC,EAAOR,EAAMS,KAAK,IACtBZ,EAAE,UAAUa,OAAOF,OAIvBG,gBAAiB,WACf,IAAIA,GAAkB,EAClBC,EAAcC,UAAUC,UAAUC,QAAQ,WAAa,EACvDC,EAAcH,UAAUC,UAAUC,QAAQ,WAAa,EAK3D,OAJKH,GAAeI,IAClBL,GAAkB,GAGbA,IAKItB,a,+CClBP,E,2JAjBQ,CAEZ4B,KAAM,WACErB,KAAKsB,YACLtB,KAAKuB,OACLC,QAAQC,IAAI,gBAEhBC,eAAgB,WAEhBzB,EAAE,UAAU0B,GAAG,UAAU,SAACC,GACf3B,EAAE2B,EAAEC,QACMC,KAAK,mBAChBC,KAAK,YAAY,GAAMC,KAAK,qBAK1CT,M,EAAI,UAAE,sBAAAU,EAAA,sDAGFxC,UAAOK,aAHL,0CAAF,E,8KAAA,4CASJwB,UAAW,WACP,IAAMY,EAASzC,UAAOC,aAChByC,EAAaD,EAAS,YACtBE,EAAkBF,EAAS,qBACjCjC,EAAE,qBAAqBoC,UAAU,CAC7BC,YAAY,EACZC,YAAY,EACZC,KAAML,EACNM,QAAS,CACL,CACItC,KAAM,aAAcuC,OAAQ,SAACvC,EAAMwC,EAAMpC,GACrC,yBAAmB6B,EAAgB7B,EAAIqC,OAAvC,aAAkDzC,EAAlD,UAER,CAAEA,KAAM,cACR,CAAEA,KAAM,cACR,CAAEA,KAAM,SACR,CAAEA,KAAM,iBACR,CAAEA,KAAM,WACR,CAAEA,KAAM,iBACR,CACIA,KAAM,SAAUuC,OAAQ,SAACvC,EAAMwC,EAAMpC,GAWjC,MAViB,oDAAH,OACW2B,EADX,yBACkC/B,EADlC,gJAc1B0C,WAAY,CACR,CACAC,QAAS,CAAC,EAAG,GACbC,WAAU,SAQhB1B,S","file":"/js/patients.js","sourcesContent":["import axios from \"axios\";\n\nvar helper = {\n\n  getSiteUrl: function () {\n    return window.location.origin;\n  },\n\n  loadStates: function () {\n    let statesJsonFile = `${this.getSiteUrl()}/storage/states.json`;\n    $.getJSON(statesJsonFile, function (data) {\n      let items = [];\n      $.each(data, function (key, row) {\n        let selected = '';\n        if ($('#state').data('value') == row.state_code) {\n          selected = 'selected';\n        }\n        items.push(`<option value=\"${row.state_code}\" ${selected}>${row.state_name}</option>`);\n      });\n\n      let html = items.join(\"\");\n      $('#state').append(html);\n    });\n  },\n\n  isSafariBrowser: function () {\n    let isSafariBrowser = false;\n    let chromeAgent = navigator.userAgent.indexOf(\"Chrome\") > -1;\n    let safariAgent = navigator.userAgent.indexOf(\"Safari\") > -1;\n    if (!chromeAgent && safariAgent) {\n      isSafariBrowser = true;\n    }\n\n    return isSafariBrowser;\n  },\n\n}\n\nexport default helper;\n","// require('./app');\nimport helper from './helper';\n\nlet patientJS = {\n\n    init: function(){\n            this.dataTable();\n            this.edit();\n            console.log(\"patients.js\");\n        },\n        formSubmission: function () {\n\n        $('.forms').on('submit', (e)=>{\n        let form = $(e.target);\n        let submitBtn = form.find('.submit-buttons');\n        submitBtn.prop('disabled', true).text('Processing...');\n        });\n\n    },\n\n    edit: async function(){\n\n        //Load state dropdown\n        helper.loadStates();\n\n        // $( \"[type='datepicker']\" ).datepicker(); clinics asked to remove datepicker from input field\n\n\n    },\n    dataTable: () => {\n        const appUrl = helper.getSiteUrl();\n        const dataSource = appUrl + '/patients';\n        const overviewPatient = appUrl + '/overview/patient/';\n        $('#patientDatatable').DataTable({\n            processing: true,\n            serverSide: true,\n            ajax: dataSource,\n            columns: [\n                {\n                    data: 'first_name', render: (data, type, row) => {\n                        return `<a href=\"${overviewPatient+row.action}\">${data}</a>`;\n                } }, // 0\n                { data: \"home_phone\" }, // 1\n                { data: \"cell_phone\" }, // 2\n                { data: \"email\"      }, // 3\n                { data: \"date_of_birth\"}, // 4\n                { data: \"address\"    }, // 5\n                { data: \"last_activity\"},\n                {\n                    data: \"action\", render: (data, type, row) => {\n                        const editHtml = `\n                        <a  title=\"Edit\" href=\"${appUrl}/edit/patient/${data}\" >\n                            <i class=\"fa fa-edit text-blue-m1 text-120\"></i>\n                        </a>\n                        `\n                        const deleteHtml = `\n                            <a  title=\"Edit\" href=\"\" >\n                                <i class=\"fa fa-trash text-danger text-120\"></i>\n                            </a>\n                        `\n                        return editHtml;\n                }} //6\n            ],\n            //\n            columnDefs: [\n                {\n                targets: [6, 7],\n                orderable:false\n                }\n            ]\n        });\n    }\n\n}\n\npatientJS.init();\n\n"],"sourceRoot":""}