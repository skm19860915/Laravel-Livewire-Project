{"version":3,"sources":["webpack:///./resources/js/pricing.js","webpack:///./resources/js/form_table.js"],"names":["products","init","$","inputmask","params2","trigger","document","getElementById","tbody","cols","name","price","receivable","description","note","saveLink","action","formTable","on","show","tooltip","id","this","attr","split","console","log","formifyRow","disableProduct","cancel","validateForm","saveProduct","restoreProduct","removeClass","next","remove","isValid","each","val","addClass","insertAfter","prop","hide","idx","el","originalValue","dataset","a","route","store","update","formData","FormData","append","obj","entries","key","value","newKey","replace","options","method","url","data","xsrfHeaderName","axios","addNewRow","response","status","errors","k","v","error","resp","text","replaceWith","restore","location","reload","bootbox","window","alertify","defaults","notifier","delay","position","FormTable","cancelBtn","clearTrFirstTime","Math","random","toString","substr","save","addActionButtons","click","innerHTML","row","createRow","insertAdjacentHTML","cancelRow","saveRow","rows","querySelectorAll","forEach","tr","tds","createElement","setAttribute","style","cursor","textContent","length","appendChild","addEventListener","e","target","parentNode","Actionbuttons","deleteApi","object","JSON","parse","edit_td","delete_td","editBtn","disableBtn","disable","tthis","is_product","indexOf","confirm","message","buttons","label","className","callback","result","_token","token","post","_delete","lastTd","td","abs","querySelector","innerText","classList","add","success","msg","dismissOthers","fileds","keys","Object","index","input","newprice","childNodes","join","parseFloat","toFixed","saveEditBtn","cancelEditBtn","inputs","params","node","nodeAttr","attributes","type","checked","stringify","colsKey","d","saveBtn","rowNodes","done","res","html","c","updateUrl","fail","values","responseJSON"],"mappings":"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","file":"/js/pricing.js","sourcesContent":["import formTable from './form_table';\n\nlet products = {\n\n    init: function () {\n\n        $(':input').inputmask();\n\n        const params2 = {\n            trigger: document.getElementById('addNewFormRowForServicesTable'),\n            tbody: document.getElementById('services-rows'),\n            cols: { name: 'text', price: 'number', receivable: \"checkbox\", description: 'text', note: \"text\" },\n            saveLink: true,\n            action: true\n        }\n        // new formTable(params);\n        new formTable(params2);\n\n        $('#addProduct').on('click', function () {\n            $('#new_product').show();\n        })\n\n        $('[data-toggle=\"tooltip\"]').tooltip();\n\n        $(document).on('click', '.edit', function () {\n            let id = $(this).attr('id').split('-')[1];\n            console.log(id);\n            products.formifyRow(id);\n        });\n\n        $(document).on('click', '.disable', function () {\n            let id = $(this).attr('id').split('-')[1];\n            products.disableProduct(id);\n        });\n\n        $('.cancel').on('click', function () {\n            let id = $(this).attr('id').split('-')[1];\n            products.cancel(id);\n        });\n\n        $('.save').on('click', function () {\n            let id = $(this).attr('id').split('-')[1];\n            if (products.validateForm(id)) {\n                products.saveProduct(id);\n            }\n        });\n\n        $(document).on('click', '.restore', function () {\n            let id = $(this).attr('id').split('-')[1];\n            products.restoreProduct(id);\n        });\n\n        $(document).on('focus', 'input.invalid-feedback-border, select.invalid-feedback-border', function () {\n            $(this).removeClass('invalid-feedback-border');\n            $(this).next('span.form-error').remove();\n        });\n    },\n\n    validateForm: function (id = null) {\n        let isValid = true;\n        if (!id) {\n            $('#new_product input.required').each(function () {\n                if ($(this).val() == '') {\n                    isValid = false;\n                    $(this).addClass('invalid-feedback-border');\n                    $('<span class=\"text-danger form-error\"><small>Required</small></span>').insertAfter($(this));\n                }\n            });\n        }\n        if ($('input[name=\"name-' + id + '\"]').val() == '') {\n            isValid = false;\n            $('input[name=\"name-' + id + '\"]').addClass('invalid-feedback-border');\n        }\n\n        if ($('input[name=\"amount-' + id + '\"]').val() == '') {\n            isValid = false;\n            $('input[name=\"amount-' + id + '\"]').addClass('invalid-feedback-border');\n        }\n\n        if ($('input[name=\"price-' + id + '\"]').val() == '') {\n            isValid = false;\n            $('input[name=\"price-' + id + '\"]').addClass('invalid-feedback-border');\n        }\n\n        if ($('#product_type_select-' + id + ' option:selected').val() == '0') {\n            isValid = false;\n            $('#product_type_select-' + id).addClass('invalid-feedback-border');\n        }\n\n        if (isValid == false) {\n            $('<span class=\"text-danger form-error\"><small>Required</small></span>').insertAfter('.invalid-feedback-border');\n        }\n\n        return isValid;\n    },\n\n    formifyRow: function (id = null) {\n\n        //const productTypes = JSON.parse(document.getElementById('products-rows').dataset.productTypes);\n\n        $('tr#' + id + ' td.editable input').prop('readonly', false);\n        $('tr#' + id + ' select.product_type_select').prop('disabled', false);\n\n        $('tr#' + id + ' td.actions .edit-disable-btns').hide();\n        $('tr#' + id + ' td.actions .save-cancel-btns').show();\n    },\n\n    cancel: function (id = null) {\n        $(':input.form-control').each(function (idx, el) {\n            let id = $(el).attr('id');\n            let originalValue = document.getElementById(id).dataset.originalValue;\n            $(this).val(originalValue);\n        });\n\n        $('tr#' + id + ' td.editable input').prop('readonly', true);\n        $('tr#' + id + ' select.product_type_select').prop('disabled', true);\n\n        $('tr#' + id + ' td.actions .edit-disable-btns').show();\n        $('tr#' + id + ' td.actions .save-cancel-btns').hide();\n    },\n\n    saveProduct: async function (id = null) {\n        let route = '';\n\n        if (id == 'new') {\n            route = document.getElementById('new_product').dataset.store;\n        } else {\n            route = document.getElementById(id).dataset.update;\n        }\n\n        if (id == 'new') {\n            var formData = new FormData(document.getElementById('form-new'));\n            formData.append('product_type_id', $('#product_type_select option:selected').val());\n        } else {\n            var formData = new FormData(document.getElementById('form-' + id));\n            formData.append('product_type_id', $('#product_type_select-' + id + ' option:selected').val());\n        }\n        var obj = {};\n\n        for (let [key, value] of formData.entries()) {\n            console.log(key + ': ' + value);\n            let newKey = key.split('-')[0];\n            obj[newKey] = value.replace('$', '');\n        }\n\n        let options = {\n            method: 'post',\n            url: route,\n            data: obj,\n            xsrfHeaderName: 'X-XSRF-TOKEN',\n        };\n\n        try {\n            let resp = await axios(options);\n            if (id !== 'new') {\n                $('tr#' + id + ' td.editable input').prop('readonly', true);\n                $('tr#' + id + ' select.product_type_select').prop('disabled', true);\n\n                $('tr#' + id + ' td.actions .edit-disable-btns').show();\n                $('tr#' + id + ' td.actions .save-cancel-btns').hide();\n            } else {\n                products.addNewRow();\n            }\n        }\n        catch (e) {\n            if (e.response.status === 422) {\n                $('.invalid-feedback').remove();\n                $.each(e.response.data.errors, function (key, value) {\n                    $.each(value, function (k, v) {\n                        $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>' + v + '</strong></span>').insertAfter('#' + key);\n                    });\n                });\n                $('.invalid-feedback').show();\n            } else {\n                console.error(e.response);\n            }\n        }\n    },\n\n    disableProduct: async function (id) {\n        const route = document.getElementById(id).dataset.delete;\n\n        let options = {\n            method: 'post',\n            url: route,\n            xsrfHeaderName: 'X-XSRF-TOKEN',\n        };\n\n        try {\n            let resp = await axios(options);\n            console.log(resp);\n            console.log(resp.status);\n            if (resp.status === 200) {\n                $('#status-' + id + ' span.badge').removeClass('badge-success').addClass('badge-danger').text('Disabled');\n                $('#disable-' + id).replaceWith(`<a role=\"button\" id=\"restore-${id}\" class=\"restore text-success\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Restore Product\"><span class=\"material-icons md-18\">power_settings_new</span></a>`);\n                $('[data-toggle=\"tooltip\"]').tooltip();\n            }\n        }\n        catch (e) {\n            if (e.response.status === 422) {\n                $('.invalid-feedback').remove();\n                $.each(e.response.data.errors, function (key, value) {\n                    $.each(value, function (k, v) {\n                        $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>' + v + '</strong></span>').insertAfter('#' + key);\n                    });\n                });\n                $('.invalid-feedback').show();\n            } else {\n                console.error(e.response);\n            }\n        }\n    },\n\n    restoreProduct: async function (id) {\n        const route = document.getElementById(id).dataset.restore;\n\n        let options = {\n            method: 'post',\n            url: route,\n            xsrfHeaderName: 'X-XSRF-TOKEN',\n        };\n\n        try {\n            let resp = await axios(options);\n            console.log(resp);\n            console.log(resp.status);\n            if (resp.status === 200) {\n                $('#status-' + id + ' span.badge').removeClass('badge-danger').addClass('badge-success').text('Active');\n                $('#restore-' + id).replaceWith(`<a role=\"button\" id=\"disable-${id}\" class=\"disable text-success\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Disable Product\"><span class=\"material-icons md-18\">power_settings_new</span></a>`);\n                $('[data-toggle=\"tooltip\"]').tooltip();\n            }\n        }\n        catch (e) {\n            if (e.response.status === 422) {\n                $('.invalid-feedback').remove();\n                $.each(e.response.data.errors, function (key, value) {\n                    $.each(value, function (k, v) {\n                        $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>' + v + '</strong></span>').insertAfter('#' + key);\n                    });\n                });\n                $('.invalid-feedback').show();\n            } else {\n                console.error(e.response);\n            }\n        }\n    },\n\n    addNewRow: function () {\n        location.reload();\n    }\n\n}\n\nproducts.init();\n","import alertify from 'alertifyjs';\nconst bootbox =   window.bootbox;\nalertify.defaults = {\n\n        notifier:{delay:5,position:'top-right'}\n\n};\nclass FormTable {\n\n\n\n    constructor({trigger,tbody,cols,saveLink,action,cancelBtn,clearTrFirstTime}) {\n\n        //Trigger\n        if (!trigger) return console.error('Trigger Not Found');\n        if (!tbody) return console.error('tbody Not Found');\n        if (!cols) return console.error('Columns Not Found');\n        saveLink ? this.saveLink = saveLink : this.saveLink = false ;\n        action ? this.action = action : this.action = false ;\n        cancelBtn ? this.cancelBtn = cancelBtn : this.cancelBtn = false ;\n        clearTrFirstTime ? this.clearTrFirstTime = clearTrFirstTime : this.clearTrFirstTime = false ;\n        this.trigger = trigger\n        this.tbody = tbody\n        //create id\n        this.id = Math.random().toString(36).substr(2, 9);\n        this.save = `save-${this.id}`;\n        this.cancel = `cancel-${this.id}`;\n\n        if (this.action)\n        {\n            // add edit and delete link\n            this.addActionButtons(tbody,cols)\n        }\n\n        $(this.trigger).click(() => {\n            if (this.clearTrFirstTime) tbody.innerHTML = '';\n            this.clearTrFirstTime = 0;\n            /// create row\n            this.row = this.createRow(cols)\n            /// inset row to document\n            this.tbody.insertAdjacentHTML('beforeend', this.row)\n            // cancel  = delete row\n            this.cancelRow(this.cancel)\n            // save data\n            this.saveRow(this.save,cols)\n            // generat new radom id\n            this.id = Math.random().toString(36).substr(2, 9);\n            this.save = `save-${this.id}`;\n            this.cancel = `cancel-${this.id}`;\n        })\n\n        return this;\n    }\n    addCancelBtn(rows) {\n        let trs = rows.querySelectorAll('tr');\n        trs.forEach(tr => {\n            let tds = tr.querySelectorAll('td');\n            let cancel = document.createElement('a');\n            cancel.setAttribute('class', 'text-primary link ')\n            cancel.style.cursor = `pointer`;\n            cancel.textContent = 'Cancel'\n            tds[tds.length - 1].appendChild(cancel);\n            cancel.addEventListener('click',e => e.target.parentNode.parentNode.remove())\n        })\n    }\n    addActionButtons(rows,cols) {\n        // console.log('Add Action Button');\n        let trs = rows.querySelectorAll('tr');\n        trs.forEach(tr => {\n          this.Actionbuttons(tr,cols)\n        })\n    }\n    Actionbuttons(tr,cols)\n    {\n       let tds = tr.querySelectorAll('td');\n            // let itemId = tr.dataset.id;\n            let deleteApi = tr.dataset.delete;\n            let object = JSON.parse(tr.dataset.object);\n            // console.log(deleteApi);\n            let edit_td = tds[tds.length - 2 ]\n            let delete_td = tds[tds.length - 1]\n            const id  = Math.random().toString(36).substr(2, 9);\n            /// add action button to last two tds\n            let editBtn = `edit-${id}`;\n            let disableBtn = `delete-${id}`;\n            // console.log(object);\n            edit_td.innerHTML = `<th><a class=\"text-primary link \" style=\"cursor:pointer\" id='${editBtn}'>Edit</a>`\n            delete_td.innerHTML   =`<a class=\"link text-${ !object.disable ? \"danger\":\"success\"} \" style=\"cursor:pointer\" id='${disableBtn}'>${ !object.disable ? \"Disable\":\"Enable\"}</a>`\n            $(`#${disableBtn}`).click(async (e) => {\n                let tthis = this;\n                 if(e.target.textContent == 'Disable')\n                {\n                    let is_product = deleteApi.indexOf('product') != -1;\n\n                    bootbox.confirm({\n                        message: `Are you sure you want to disable this ${is_product ? 'product' : 'service'}?`,\n                        buttons: {\n                            //i make it opsite to change button order\n                            cancel: {\n                                label: 'Yes',\n                                className: 'btn-primary'\n                            },\n                            confirm: {\n                                label: 'Cancel',\n                                className: 'btn-secondary'\n                            },\n                        },\n                        callback: async function (result) {\n                            //user want disable\n                            console.log(result);\n                            if(!result)\n                            {\n                                    // proccess delete\n                                    const _token = tthis.tbody.dataset.token;\n                                    const _delete = await $.post(deleteApi, { _token, });\n                                    // console.log(_delete.responseJSON);\n                                    if (_delete.status) {\n                                        //get row\n                                        const row = e.target.parentNode.parentNode;\n                                        const lastTd = row.querySelectorAll('td');\n                                        let td = lastTd[Math.abs(lastTd.length- 1)];\n                                        let a = td.querySelector('a');\n                                        console.log(_delete.data);\n                                        if(_delete.data.disable == 1)\n                                        {\n                                            a.innerText = \"Enable\";\n                                            a.classList.add('text-success');\n                                            a.classList.remove('text-danger');\n                                        }else{\n\n                                            a.innerText = \"Disable\";\n                                            a.classList.remove('text-success');\n                                            a.classList.add('text-danger');\n                                        }\n                                        //delete row\n                                        // row.remove();\n                                        //message\n                                        alertify.success(_delete.msg).dismissOthers()\n                                    } else {\n                                        alertify.error(_delete.msg).dismissOthers()\n                                    }\n                            }\n                        }\n                    });\n                }else{\n\n                                    // if user want enable\n                                    // proccess delete\n                                    const _token = this.tbody.dataset.token;\n                                    const _delete = await $.post(deleteApi, { _token, });\n                                    // console.log(_delete.responseJSON);\n                                    if (_delete.status) {\n                                        //get row\n                                        const row = e.target.parentNode.parentNode;\n                                        const lastTd = row.querySelectorAll('td');\n                                        let td = lastTd[Math.abs(lastTd.length- 1)];\n                                        let a = td.querySelector('a');\n                                        console.log(_delete.data);\n                                        if(_delete.data.disable == 1)\n                                        {\n                                            a.innerText = \"Enable\";\n                                            a.classList.add('text-success');\n                                            a.classList.remove('text-danger');\n                                        }else{\n\n                                            a.innerText = \"Disable\";\n                                            a.classList.remove('text-success');\n                                            a.classList.add('text-danger');\n                                        }\n                                        //delete row\n                                        // row.remove();\n                                        //message\n                                        alertify.success(_delete.msg).dismissOthers()\n                                    } else {\n                                        alertify.error(_delete.msg).dismissOthers()\n                                    }\n                }\n\n\n            })\n            $(`#${editBtn}`).click(async (e) => {\n                const row = e.target.parentNode.parentNode;\n                let fileds = {};\n                let keys = Object.keys(cols);\n                keys.forEach(k => { if (object[k]) fileds[k] = object[k]; })\n                // inset input fields\n                let tds = row.querySelectorAll('td');\n                // console.log(tds[2].querySelector('input'));\n                keys.forEach(async(k,index) => {\n                    let td = tds[index];\n                    let value = fileds[k] ? fileds[k] : '';\n                    let input = ``;\n                    if (cols[k] !== 'checkbox') {\n                        if(k == 'price')\n                        {\n                            let newprice = td.childNodes[0].textContent.split('$').join('');\n                            newprice = parseFloat(newprice).toFixed(2);\n                            value = newprice;\n                        }\n                        if(k == 'amount')\n                        {\n                            let newprice = td.childNodes[0].textContent.split('$').join('');\n                            newprice = parseFloat(newprice).toFixed(0);\n                            value = newprice;\n                        }\n                        input = `<input class='form-control ' step='any' name='${k}' value='${value}' id='${k}-${this.id}' type='${cols[k]}' />`;\n                    } else {\n                        input = `<input class='form-control ' name='${k}'  ${value ? \"checked\" : \"\"}  id='${k}-${this.id}' type='${cols[k]}' />`;\n                    }\n                    td.innerHTML = input\n                })\n\n                let delete_td = tds[tds.length - 2 ]\n                let edit_td = tds[tds.length - 1]\n                const id  = Math.random().toString(36).substr(2, 9);\n                /// add action button to last two tds\n                let saveEditBtn = `save-edit-${id}`;\n                let cancelEditBtn = `cancel-edit-${id}`;\n                delete_td.innerHTML = `<th><a class=\"text-primary link \" style=\"cursor:pointer\" id='${saveEditBtn}'>Save</a>`\n                edit_td.innerHTML   =`<a class=\"text-primary link \" style=\"cursor:pointer\" id='${cancelEditBtn}'>Cancel</a>`\n\n\n                const inputs = row.querySelectorAll('input');\n                $(`#${saveEditBtn}`).click(async e => {\n                    const params = {};\n                    inputs.forEach(node => {\n                        let nodeAttr = node.attributes;\n                        if (node.type)\n                        {\n                            if (node.type == 'checkbox')\n                            {\n\n                                return params[nodeAttr.name.value] = node.checked;\n                            }\n                        }\n                        params[nodeAttr.name.value] = node.value;\n\n                    })\n                    params['_token'] = this.tbody.dataset.token;\n                    let update = await $.post(row.dataset.update,params);\n                    if (update.status) {\n                        inputs.forEach(async (input )=> {\n                            if (input.type != 'checkbox')\n                            {\n                                if(input.name == 'price')\n                                {\n\n                                    input.insertAdjacentHTML('afterend', \"$\"+parseFloat(input.value).toFixed(2))\n                                }else{\n\n                                    input.insertAdjacentHTML('afterend', input.value)\n                                }\n                            } else {\n                                //update object info\n                                input.parentNode.parentNode.setAttribute('data-object',JSON.stringify(update.data));\n\n                                input.insertAdjacentHTML('afterend', input.checked ? \"Yes\" : \"No\")\n                            }\n                            this.Actionbuttons(tr,cols)\n                            input.remove()\n                        })\n\n                        return alertify.success(update.msg).dismissOthers();\n                    };\n                    return alertify.error(update.msg).dismissOthers();\n                })\n\n                $(`#${cancelEditBtn}`).click(() => {\n                        inputs.forEach(input => {\n                            if (input.type == 'checkbox'){\n                                input.insertAdjacentHTML('afterend', input.checked ? \"Yes\" : \"No\")\n                            }else if(input.name == 'price'){\n                                let price  = parseFloat(input.value).toFixed(2)\n                                input.insertAdjacentHTML('afterend', \"$\"+price)\n\n                            }else{\n                                input.insertAdjacentHTML('afterend', input.value)\n                            }\n                            input.remove()\n                            this.Actionbuttons(tr,cols)\n                        })\n                })\n\n\n            })\n    }\n\n    createRow(cols)\n    {\n        let colsKey = Object.keys(cols);\n        let tds = ``;\n        colsKey.forEach((k) => {\n            if (cols[k] != 'select')\n            {\n                tds += `\n                <td>\n                <input class='form-control' name='${k}' id='${k}-${this.id}' type='${cols[k]}' />\n                </td>\n\n                `\n            } else if (cols[k] == 'select') {\n                let data = this.tbody.dataset[k];\n                data ? data = JSON.parse(data) : data = [{id:'',name:''}];\n\n                let options = ``;\n\n                data.forEach(d => {\n                    options += `<option value='${d.id}'>${d.name}</option>`;\n                });\n                tds += `\n                <td>\n                    <select class='form-control' name='${k}[]' id='${k}-${this.id}' type='${cols[k]}'>\n                        ${options}\n                    </select>\n                </td>\n\n                `\n            } else {\n                return '';\n            }\n        })\n\n\n\n\n        let html = `\n                <tr>\n                ${tds}\n                    ${this.saveLink ? `<th><a class=\"text-primary link \" style=\"cursor:pointer\" id='${this.save}'>Save</a></th>`:``}\n                    <th><a class=\"text-primary link \" style=\"cursor:pointer\" id='${this.cancel}'>Cancel</a></th>\n                </tr>\n\n        `\n        return html\n    }\n\n    cancelRow(cancel) {\n        const cancelBtn = document.querySelector(`#${cancel}`)\n        if (cancelBtn)\n        {\n            cancelBtn.addEventListener('click', (e) => {\n                let row = e.target.parentNode.parentNode;\n                row.remove()\n            })\n        }\n    }\n    saveRow(save,cols) {\n        const saveBtn = document.querySelector(`#${save}`)\n        if (saveBtn) {\n            saveBtn.addEventListener('click', async (e) => {\n\n                const row = e.target.parentNode.parentNode;\n                const rowNodes = row.querySelectorAll('input');\n                const params = {};\n                params['_token'] = this.tbody.dataset.token;\n                rowNodes.forEach(node => {\n                    let nodeAttr = node.attributes;\n                    if (node.type)\n                    {\n                        if (node.type == 'checkbox')\n                        {\n\n                            return params[nodeAttr.name.value] = node.checked;\n                        }\n                    }\n                    return params[nodeAttr.name.value] = node.value;\n\n\n                })\n                const createProduct = await $.post(this.tbody.dataset.store, params)\n                    .done(res => {\n                        let html = ``;\n                        Object.keys(cols).forEach(c => {\n\n                            if (cols[c] == 'checkbox')\n                            {\n                                // console.log(res.data.object[c]);\n                                 html += `<td> ${res.data.object[c] ? 'Yes' : 'No'} </td>`\n                            }\n                            else {\n                               if(c == 'price')\n                               {\n                                   html += `<td> $${res.data.object[c] ? res.data.object[c] : ''} </td>`\n\n                               }else{\n\n                                   html += `<td> ${res.data.object[c] ? res.data.object[c] : ''} </td>`\n                               }\n                            }\n                        })\n                    html += `<td></td><td></td>`;\n                    row.innerHTML = html\n                    row.setAttribute('data-update', res.data.updateUrl);\n                    row.setAttribute('data-object', JSON.stringify(res.data.object));\n                    this.Actionbuttons(row,cols)\n                    alertify.success(res.msg).dismissOthers()\n                })\n                .fail(res => {\n                   // display errors\n                    Object.values(res.responseJSON.errors).forEach(e => {\n                        alertify.error(e[0]).dismissOthers();\n                    })\n                })\n            })\n        }\n    }\n\n\n}\n\n\n\nexport default FormTable;\n"],"sourceRoot":""}