(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/schedule"],{

/***/ "./resources/js/schedule.js":
/*!**********************************!*\
  !*** ./resources/js/schedule.js ***!
  \**********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./resources/js/helper.js\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fullcalendar/core */ \"./node_modules/@fullcalendar/core/main.js\");\n/* harmony import */ var _fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fullcalendar/interaction */ \"./node_modules/@fullcalendar/interaction/main.js\");\n/* harmony import */ var _fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @fullcalendar/daygrid */ \"./node_modules/@fullcalendar/daygrid/main.js\");\n/* harmony import */ var _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @fullcalendar/timegrid */ \"./node_modules/@fullcalendar/timegrid/main.js\");\n/* harmony import */ var _fullcalendar_list__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @fullcalendar/list */ \"./node_modules/@fullcalendar/list/main.js\");\n/* harmony import */ var alertifyjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! alertifyjs */ \"./node_modules/alertifyjs/build/alertify.js\");\n/* harmony import */ var alertifyjs__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(alertifyjs__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_9__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// require('./app');\n\n\n\n\n\n\n\n\n\nvar bootbox = window.bootbox;\nvar _blocks = [];\nvar schedule = {\n  init: function init() {\n    this.runCalendar();\n    this.togglePatient();\n    this.formSubmission();\n    this.deleteAppointment();\n    $(function () {\n      if ($('#date_appointment').val()) {\n        var date = $('#date_appointment').val();\n        schedule.getBlocks(date);\n      } // start select 2\n\n\n      $('#current_patient').select2({\n        placeholder: \"Please enter 1 or more character\",\n        minimumInputLength: 1,\n        ajax: {\n          url: _helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + '/ajax-search-patients',\n          dataType: 'json',\n          delay: 250,\n          data: function data(params) {\n            return {\n              searchTerm: params.term // search term\n\n            };\n          },\n          processResults: function processResults(response) {\n            return {\n              results: $.map(response, function (item) {\n                if (item.address) {\n                  item.address += ',';\n                } else {\n                  item.address = '';\n                }\n\n                if (item.city) {\n                  item.city += ',';\n                } else {\n                  item.city = '';\n                }\n\n                if (!item.state) {\n                  item.state = '';\n                }\n\n                if (item.zip) {\n                  item.zip = ', ' + item.zip;\n                } else {\n                  item.zip = '';\n                }\n\n                return {\n                  text: \"\".concat(item.first_name, \", \").concat(item.last_name, \" - \").concat(item.address, \" \").concat(item.city, \" \").concat(item.state).concat(item.zip),\n                  id: item.id\n                };\n              })\n            };\n          },\n          cache: true\n        }\n      });\n    });\n    console.log(\"schedule.js\");\n    alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.set('notifier', 'position', 'top-right');\n    alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.set('notifier', 'delay', 50);\n    $('#date_appointment').on('change', function (e) {\n      $('#time_appointment').val('HH:MM AM');\n      var date = e.target.value;\n      schedule.getBlocks(date);\n    });\n    $('#block_form input').on('blur', function () {\n      if (schedule.blockFormIsValid()) {\n        $('#block_submit').prop('disabled', false);\n      }\n    });\n    $('.delete-block').on('click', function () {\n      var id = $('.delete-block').attr('id').split('_')[2];\n      var token = $(\"[name='token']\").attr('content');\n      axios__WEBPACK_IMPORTED_MODULE_9___default.a.post(_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + \"/block/delete/\".concat(id), {\n        token: token\n      });\n      window.location.replace(_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + \"/schedule\");\n    });\n    $(\"#time_appointment\").on('keyup', function (e) {\n      var time = e.target.value;\n\n      if (!time) {\n        time = 'HH:MM A';\n      }\n\n      var timeArr = time.split(' ');\n      var hm = timeArr[0].split(':');\n      var h = hm[0];\n      var m = hm[1];\n      var mode = timeArr[1];\n      var t00 = m.indexOf('00');\n      var t15 = m.indexOf('15');\n      var t30 = m.indexOf('30');\n      var t45 = m.indexOf('45');\n      var all = t00 + t15 + t30 + t45;\n\n      if (all == -4 && m.indexOf('M') == -1 && h.indexOf('H') == -1) //a valid time exists, but it's not 15,30,45, or 00.\n        {\n          var reset = \"\".concat(h, \":MM \").concat(mode);\n          e.target.value = reset;\n          $('[name=\"time_appointment\"]').addClass('is-invalid');\n          $('[name=\"time_appointment\"]').removeClass('valid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.dismissAll();\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error(\"Minutes must be multiple of 15.\");\n        } else {\n        if (m.indexOf('M') == -1 && h.indexOf('H') == -1) //we already know the time is right, and this is checking that there are no H or Ms in the input.\n          {\n            if (schedule.hasBlockConflict(e.target.value)) {\n              $('[name=\"time_appointment\"]').addClass('is-invalid');\n              $('[name=\"time_appointment\"]').removeClass('valid');\n              alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.dismissAll();\n              alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error(\"The calendar is blocked during this time.\");\n            } else {\n              alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.dismissAll();\n              $('[name=\"time_appointment\"]').addClass('is-valid');\n              $('[name=\"time_appointment\"]').removeClass('is-invalid');\n            }\n          } else if (m.indexOf('M') !== -1 || h.indexOf('H') !== -1) {\n          $('[name=\"time_appointment\"]').addClass('is-invalid');\n          $('[name=\"time_appointment\"]').removeClass('valid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.dismissAll();\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error(\"Please choose a valid time.\");\n        }\n      }\n    });\n    this.reorder();\n    this.preventSmsConfirmation();\n  },\n  deleteAppointment: function deleteAppointment() {\n    $(function () {\n      var deleteAppointment = $(\"#deleteAppointment\");\n\n      if (deleteAppointment) {\n        deleteAppointment.click(function (e) {\n          var type = deleteAppointment.prop('type');\n\n          if (type == 'button') {\n            bootbox.confirm({\n              message: 'Are you sure you wish to delete this appointment ?',\n              buttons: {\n                cancel: {\n                  label: 'Yes',\n                  className: 'btn-primary'\n                },\n                confirm: {\n                  label: 'Cancel',\n                  className: 'btn-secondary'\n                }\n              },\n              callback: function () {\n                var _callback = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(result) {\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!result) {\n                            deleteAppointment.prop('type', 'submit').trigger('click');\n                          }\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                function callback(_x) {\n                  return _callback.apply(this, arguments);\n                }\n\n                return callback;\n              }()\n            }); // const x = window.confirm('Are you sure you wish to delete this appointment ?')\n            // if (x) {\n            //     deleteAppointment.prop('type', 'submit').trigger('click');\n            // }\n          }\n        });\n      }\n    });\n  },\n  formSubmission: function formSubmission() {\n    $('.forms').on('submit', function (e) {\n      var _e$target, _e$target$time_appoin;\n\n      if ($('input.is-invalid').length > 0) {\n        alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Correct errors before submitting.');\n        return false;\n      }\n\n      var form = $(e.target);\n      var currentOrnew = e.target.currentOrnew ? e.target.currentOrnew.value : false;\n      var reorder = e.target.reorder ? e.target.reorder.value : false;\n\n      if (!reorder) {\n        alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Please select whether this appointment is a reorder.');\n        return false;\n      }\n\n      if (currentOrnew == 'new') {\n        var firstname = form.find(\"[name='first_name']\");\n        var lastname = form.find(\"[name='last_name']\");\n        var city = form.find(\"[name='city']\");\n        var marketingSource = form.find(\"[name='how_did_hear_about_clinic']\"); ///filter values\n\n        var fnameHasNumber = /\\d/.test(firstname.val());\n        var lnameHasNumber = /\\d/.test(lastname.val());\n        var cityHasNumber = /\\d/.test(city.val()); //show messages\n\n        var stop = 0;\n\n        if (!marketingSource.val()) {\n          stop = 1;\n          e.preventDefault();\n          marketingSource.addClass('is-invalid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Marketing source is required.');\n        } else {\n          marketingSource.removeClass('is-invalid');\n          marketingSource.addClass('is-valid');\n        }\n\n        if (city.val() && cityHasNumber) {\n          stop = 1;\n          e.preventDefault();\n          city.addClass('is-invalid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('City should not include numbers.');\n        } else {\n          city.removeClass('is-invalid');\n          city.addClass('is-valid');\n        }\n        /*if( !city.val()){\r\n            stop = 1\r\n            e.preventDefault()\r\n            city.addClass('is-invalid')\r\n            alertify.error('City is required.');\r\n        }else{\r\n              if (cityHasNumber) {\r\n                stop = 1\r\n                e.preventDefault()\r\n                city.addClass('is-invalid')\r\n                alertify.error('City should not include numbers.');\r\n            }else{\r\n                city.removeClass('is-invalid')\r\n                city.addClass('is-valid')\r\n              }\r\n        }*/\n\n\n        if (!lastname.val()) {\n          stop = 1;\n          e.preventDefault();\n          lastname.addClass('is-invalid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Last name required.');\n        } else {\n          if (lnameHasNumber) {\n            stop = 1;\n            e.preventDefault();\n            lastname.addClass('is-invalid');\n            alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Last name should not include numbers.');\n          } else {\n            lastname.removeClass('is-invalid');\n            lastname.addClass('is-valid');\n          }\n        }\n\n        if (!firstname.val()) {\n          stop = 1;\n          e.preventDefault();\n          firstname.addClass('is-invalid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('First name is required.');\n        } else {\n          if (fnameHasNumber) {\n            stop = 1;\n            e.preventDefault();\n            firstname.addClass('is-invalid');\n            alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('First name should not include numbers.');\n          } else {\n            firstname.removeClass('is-invalid');\n            firstname.addClass('is-valid');\n          }\n        }\n\n        if (stop) {\n          return;\n        }\n      } else if (currentOrnew == 'current') {\n        var patient = form.find(\"[name='current_patient']\");\n        var vpatient = patient.val();\n        var date = form.find(\"[name='date_appointment']\");\n        var vdate = date.val();\n\n        var _time = form.find(\"[name='time_appointment']\");\n\n        var vtime = _time.val();\n\n        var appt_type = form.find(\"[name='appointment_type']\");\n        var vappt_type = appt_type.val();\n\n        if (!vpatient) {\n          e.preventDefault();\n          $('.select2-selection.select2-selection--single').css({\n            'border-color': 'red'\n          });\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Patient is required');\n        } else {\n          $('.select2-selection.select2-selection--single').css({\n            'border-color': '#00addd'\n          });\n        }\n\n        if (!vdate) {\n          e.preventDefault();\n          date.addClass('is-invalid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Date is required');\n        } else {\n          date.removeClass('is-invalid');\n        }\n\n        if (!vtime) {\n          e.preventDefault();\n\n          _time.addClass('is-invalid');\n\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Time is required');\n        } else {\n          _time.removeClass('is-invalid');\n        }\n\n        if (!vappt_type) {\n          e.preventDefault();\n          appt_type.addClass('is-invalid');\n          alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error('Appointment is required');\n        } else {\n          appt_type.removeClass('is-invalid');\n        }\n\n        if (!vpatient || !vdate || !vtime || !appt_type) {\n          return;\n        } // e.preventDefault();\n        // return\n\n      }\n\n      var time = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$time_appoin = _e$target.time_appointment) === null || _e$target$time_appoin === void 0 ? void 0 : _e$target$time_appoin.value;\n\n      if (time) {\n        {\n          var t00 = time.indexOf(':00');\n          var t15 = time.indexOf(':15');\n          var t30 = time.indexOf(':30');\n          var t45 = time.indexOf(':45');\n          var all = t00 + t15 + t30 + t45;\n          var h = time.substring(0, 2);\n\n          if (all == -4) {\n            e.preventDefault();\n            alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.error(\"Minutes must be multiple of 15.\");\n            return;\n          }\n        }\n      }\n\n      var submitBtn = form.find('.submit-buttons');\n      submitBtn.prop('disabled', true).text('Processing...');\n    });\n  },\n  runCalendar: function runCalendar() {\n    return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {\n      var calendarEl, plugins, _token, calendar;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              /* initialize the calendar\r\n               ----------------------------------------------------------------- */\n              //Date for the calendar events (dummy data)\n              calendarEl = document.getElementById('calendar');\n\n              if (calendarEl) {\n                _context4.next = 3;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 3:\n              plugins = {\n                plugins: [_fullcalendar_interaction__WEBPACK_IMPORTED_MODULE_3__[\"default\"], _fullcalendar_daygrid__WEBPACK_IMPORTED_MODULE_4__[\"default\"], _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _fullcalendar_list__WEBPACK_IMPORTED_MODULE_6__[\"default\"]],\n                headerToolbar: {\n                  left: 'prev,next today',\n                  center: 'title',\n                  right: 'dayGridMonth,timeGridWeek,timeGridDay'\n                },\n                themeSystem: 'bootstrap'\n              };\n              _token = $(\"[name='token']\").attr('content');\n              calendar = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_2__[\"Calendar\"](calendarEl, _objectSpread(_objectSpread({}, plugins), {}, {\n                events: function () {\n                  var _events = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(date) {\n                    var table, start, end, res, events, blocks, _iterator, _step, i;\n\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            table = $(\".fc-view-harness.fc-view-harness-active\");\n                            table.append(\"\\n            <div class=\\\"loader\\\">\\n                <div class=\\\"spinner-border text-primary\\\" role=\\\"status\\\">\\n                    <span class=\\\"sr-only\\\">Loading...</span>\\n                </div>\\n            </div>\\n            \");\n                            start = date.start, end = date.end;\n                            start = moment__WEBPACK_IMPORTED_MODULE_8___default()(start).format('YYYY-MM-DD');\n                            end = moment__WEBPACK_IMPORTED_MODULE_8___default()(end).format('YYYY-MM-DD');\n                            _context2.next = 7;\n                            return $.post(_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + '/get/appts', {\n                              _token: _token,\n                              start: start,\n                              end: end\n                            });\n\n                          case 7:\n                            res = _context2.sent;\n                            _context2.next = 10;\n                            return res.appts.map(function (appt) {\n                              return schedule.appts(appt);\n                            });\n\n                          case 10:\n                            events = _context2.sent;\n                            _context2.next = 13;\n                            return res.blocks.map(function (block) {\n                              return schedule.blocks(block);\n                            });\n\n                          case 13:\n                            blocks = _context2.sent;\n                            _iterator = _createForOfIteratorHelper(blocks);\n\n                            try {\n                              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                                i = _step.value;\n                                events.push(i);\n                              }\n                            } catch (err) {\n                              _iterator.e(err);\n                            } finally {\n                              _iterator.f();\n                            }\n\n                            $(\".loader\").remove();\n                            return _context2.abrupt(\"return\", events);\n\n                          case 18:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  function events(_x2) {\n                    return _events.apply(this, arguments);\n                  }\n\n                  return events;\n                }(),\n                lazyFetching: false,\n                eventDidMount: function () {\n                  var _eventDidMount = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(info) {\n                    var event, el, eventTitle, detail, content;\n                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            event = info.event['_def'];\n                            el = info.el;\n                            eventTitle = el.querySelector('.fc-event-title');\n                            detail = event.extendedProps.detail; // defualt background\n                            //el.classList.add('appt.new')\n                            // default padding\n\n                            el.classList.add('pl-2');\n                            el.classList.add('pr-2'); // default padding\n\n                            eventTitle.classList.add('w-100'); // default text color\n\n                            eventTitle.classList.add('text-white');\n                            /**\r\n                            //       .appt-success\r\n                            //       .appt-confirm-no-show\r\n                            //       .appt-cancelled\r\n                            //       .appt-reschedule\r\n                            //       .appt-voicemail\r\n                            //       .appt-no-sales\r\n                            //     */\n                            //if(patient.schedule_type.toLowerCase() == 'Rescheduled'.toLowerCase()) eventTitle.classList.add('bg-warning')\n\n                            if (detail.schedule_type_id == 5) el.classList.add('appt-reschedule');else if (detail.schedule_type_id == 4) el.classList.add('appt-cancelled');else if (detail.schedule_type_id == 6) el.classList.add('appt-voicemail');else if (detail.schedule_type_id == 3) el.classList.add('appt-success');else if (detail.schedule_type_id == 7) el.classList.add('appt-no-sales');else if (detail.schedule_type_id == 8) el.classList.add('appt-confirm-no-show');else if (detail.schedule_type_id == 9) el.classList.add('appt-block');else el.classList.add('appt-new');\n\n                            if (detail[\"new\"]) {\n                              content = eventTitle.textContent;\n                              eventTitle.innerHTML = \"<span class='d-flex align-items-center'>\".concat(content, \"<i class=\\\"fas fa-star-of-life\\\"></i></span>\");\n                            }\n\n                            if (detail.appointment_type == \"Procedure\") {\n                              eventTitle.insertAdjacentHTML('beforeend', \" <i class=\\\"fas fa-plus-square\\\"></i> \");\n                            }\n\n                            if (detail.appointment_type == \"Other\") {\n                              eventTitle.insertAdjacentHTML('beforeend', \" <i class=\\\"far fa-circle\\\"></i> \");\n                            }\n\n                          case 12:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  function eventDidMount(_x3) {\n                    return _eventDidMount.apply(this, arguments);\n                  }\n\n                  return eventDidMount;\n                }()\n              }));\n              calendar.render();\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  appts: function appts(appt) {\n    var time24 = this.get24hTime(appt.time);\n    var endTime = moment__WEBPACK_IMPORTED_MODULE_8___default()(appt.time, 'hh:mm A').add(30, 'minutes');\n    var endTime24 = this.get24hTime(endTime.utcOffset(0, true).format('hh:mm A'));\n    var start = \"\".concat(appt.date, \"T\").concat(time24);\n    var end = \"\".concat(appt.date, \"T\").concat(endTime24);\n    var time = appt.time.split(' ').join('').slice(0, -1).replace(':00', '').toLowerCase();\n    var url = _helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + '/edit/appointment/' + appt.id;\n    var total = '';\n    if (parseInt(appt.ticket_count) != 0) total = appt.total ? \"$\" + parseFloat(appt.total).toFixed(2) : '';\n    var title = \"\".concat(time, \" \").concat(appt.last_name, \", \").concat(appt.first_name, \" \").concat(total);\n    var detail = appt;\n    var event = {\n      title: title,\n      start: start,\n      end: end,\n      detail: detail,\n      url: url\n    };\n    return event;\n  },\n  blocks: function blocks(block) {\n    var date = block.date;\n    var startTime24 = this.get24hTime(block.start_time);\n    var endTime24 = this.get24hTime(block.end_time);\n    var start = \"\".concat(date, \"T\").concat(startTime24);\n    var end = \"\".concat(date, \"T\").concat(endTime24);\n    var startTime = block.start_time.split(' ').join('').slice(0, -1).replace(':00', '').toLowerCase();\n    var endTime = block.end_time.split(' ').join('').slice(0, -1).replace(':00', '').toLowerCase();\n    var url = _helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + '/block/edit/' + block.id;\n    var title = \"\".concat(startTime, \" - \").concat(endTime, \" \").concat(block.description);\n    var detail = block;\n    var event = {\n      title: title,\n      start: start,\n      end: end,\n      detail: detail,\n      url: url\n    };\n    return event;\n  },\n  get24hTime: function get24hTime(str) {\n    str = String(str).toLowerCase().replace(/\\s/g, '');\n    var has_am = str.indexOf('am') >= 0;\n    var has_pm = str.indexOf('pm') >= 0; // first strip off the am/pm, leave it either hour or hour:minute\n\n    str = str.replace('am', '').replace('pm', ''); // if hour, convert to hour:00\n\n    if (str.indexOf(':') < 0) str = str + ':00'; // now it's hour:minute\n    // we add am/pm back if striped out before\n\n    if (has_am) str += ' am';\n    if (has_pm) str += ' pm'; // now its either hour:minute, or hour:minute am/pm\n    // put it in a date object, it will convert to 24 hours format for us\n\n    var d = new Date(\"1/1/2011 \" + str); // make hours and minutes double digits\n\n    var doubleDigits = function doubleDigits(n) {\n      return parseInt(n) < 10 ? \"0\" + n : String(n);\n    };\n\n    return doubleDigits(d.getHours()) + ':' + doubleDigits(d.getMinutes());\n  },\n  togglePatient: function togglePatient() {\n    $(function () {\n      var currentOrnew = $(\"input[name='currentOrnew']\"); /// on document load\n\n      var value = currentOrnew.val();\n\n      if (value == 'current') {\n        $(\"#new-patient\").addClass('d-none');\n        $(\"#current-patient\").removeClass('d-none');\n      } else {\n        $(\"#new-patient\").removeClass('d-none');\n        $(\"#current-patient\").addClass('d-none');\n      } // on value change\n\n\n      currentOrnew.click(function (e) {\n        var value = e.target.value;\n\n        if (value == 'current') {\n          $(\"#new-patient\").addClass('d-none');\n          $(\"#current-patient\").removeClass('d-none');\n        } else {\n          $(\"#new-patient\").removeClass('d-none');\n          $(\"#current-patient\").addClass('d-none');\n        }\n      });\n    });\n  },\n  reorder: function reorder() {\n    $('#reorderTooltip').on('click', function () {\n      alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.notify('A reorder won\\'t have an appointment confirmation sent to the patient (only applies if Zingle is enabled).', 'custom', 5, function () {});\n    });\n  },\n  preventSmsConfirmation: function preventSmsConfirmation() {\n    $('#preventSMSConfirmationTooltip').on('click', function () {\n      alertifyjs__WEBPACK_IMPORTED_MODULE_7___default.a.notify('Check this to prevent Zingle from sending an SMS confirmation to the patient (only applies if Zingle is enabled).', 'custom', 5, function () {});\n    });\n  },\n  getBlocks: function getBlocks(date) {\n    var start = moment__WEBPACK_IMPORTED_MODULE_8___default()(date).format('YYYY-MM-DD');\n    var end = moment__WEBPACK_IMPORTED_MODULE_8___default()(date).format('YYYY-MM-DD');\n    var token = $(\"[name='token']\").attr('content');\n    var settings = {\n      method: 'POST',\n      url: _helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + '/get/blocks',\n      data: {\n        token: token,\n        start: start,\n        end: end\n      },\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRF-TOKEN': document.querySelector('meta[name=\"token\"]').getAttribute('content')\n      },\n      xsrfHeaderName: 'X-XSRF-TOKEN'\n    };\n    axios__WEBPACK_IMPORTED_MODULE_9___default()(settings).then(function (resp) {\n      if (resp.status === 200) {\n        _blocks = resp.data.map(function (block) {\n          return schedule.blocks(block);\n        });\n      }\n    })[\"catch\"](function (err) {\n      console.error(err);\n    });\n  },\n  hasBlockConflict: function hasBlockConflict(apptTime) {\n    var apptDate = moment__WEBPACK_IMPORTED_MODULE_8___default()($('#date_appointment').val(), 'MM/DD/YYYY').format('YYYY-MM-DD');\n    var inputTime = moment__WEBPACK_IMPORTED_MODULE_8___default()(apptTime, 'hh:mm A');\n    var time24 = this.get24hTime(inputTime.utcOffset(0, true).format('hh:mm A'));\n    var inputDateTime = moment__WEBPACK_IMPORTED_MODULE_8___default()(\"\".concat(apptDate, \"T\").concat(time24), 'YYYY-MM-DDTHH:mm');\n\n    var _iterator2 = _createForOfIteratorHelper(_blocks),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var i = _step2.value;\n        var blockStart = moment__WEBPACK_IMPORTED_MODULE_8___default()(i.start, 'YYYY-MM-DDTHH:mm');\n        var blockEnd = moment__WEBPACK_IMPORTED_MODULE_8___default()(i.end, 'YYYY-MM-DDTHH:mm');\n\n        if (inputDateTime.isBetween(blockStart, blockEnd) || inputDateTime.isSame(blockStart)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return false;\n  },\n  blockFormIsValid: function blockFormIsValid() {\n    $('#block_form input').removeClass('is-invalid');\n    $('.invalid-feedback').remove();\n    var valid = true;\n    var rsn = document.getElementById('block_reason');\n    var date = document.getElementById('block_date');\n    var start = document.getElementById('block_start');\n    var end = document.getElementById('block_end');\n    var mDate = moment__WEBPACK_IMPORTED_MODULE_8___default()(date.value, 'MM/DD/YYYY');\n    var mStart = moment__WEBPACK_IMPORTED_MODULE_8___default()(start.value, 'hh:mm A');\n    var mEnd = moment__WEBPACK_IMPORTED_MODULE_8___default()(end.value, 'hh:mm A');\n\n    if (rsn.value == '') {\n      rsn.classList.add('is-invalid');\n      $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>Reason is required</strong></span>').insertAfter('#block_reason');\n      valid = false;\n    }\n\n    if (!mDate.isValid()) {\n      date.classList.add('is-invalid');\n      $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>Please enter a valid date</strong></span>').insertAfter('#block_date');\n      valid = false;\n    }\n\n    if (!mStart.isValid()) {\n      start.classList.add('is-invalid');\n      $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>Please enter a valid time</strong></span>').insertAfter('#block_start');\n      valid = false;\n    }\n\n    if (!mEnd.isValid()) {\n      end.classList.add('is-invalid');\n      $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>Please enter a valid time</strong></span>').insertAfter('#block_end');\n      valid = false;\n    } else if (mEnd.isSameOrBefore(mStart)) {\n      end.classList.add('is-invalid');\n      $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>End time must be greater than start time.</strong></span>').insertAfter('#block_end');\n      valid = false;\n    }\n\n    if (!valid) return false;\n    $('#block_form input').removeClass('is-invalid');\n    $('.invalid-feedback').remove();\n    return true;\n  }\n};\nschedule.init();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/schedule.js\n");

/***/ }),

/***/ 5:
/*!****************************************!*\
  !*** multi ./resources/js/schedule.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\GithubRepository\pryapus\resources\js\schedule.js */"./resources/js/schedule.js");


/***/ })

},[[5,"/js/manifest","/js/vendor"]]]);