(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["/js/tickets"],{

/***/ "./resources/js/tickets.js":
/*!*********************************!*\
  !*** ./resources/js/tickets.js ***!
  \*********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"./resources/js/helper.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! toastr */ \"./node_modules/toastr/toastr.js\");\n/* harmony import */ var toastr__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(toastr__WEBPACK_IMPORTED_MODULE_3__);\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// require('./app');\n\n\n\nvar bootbox = window.bootbox;\nvar ticket_info = {\n  init: function init() {\n    console.log('tickets.js');\n    $(':input').inputmask();\n    $('#addNewFormRowForProductsTable').on('click', function () {\n      setTimeout(function () {\n        ticket_info.calculateTreatmentEndDate();\n      }, 500);\n    });\n    $(document).on('blur', '#products-rows tr td.amount-node input', function (e) {\n      ticket_info.calculateTreatmentEndDate();\n    });\n    $(document).on('blur', '#products-rows tr td.price-node input', function (e) {\n      ticket_info.total();\n    });\n    $(document).on('keyup', '.services_price', function (e) {\n      ticket_info.total();\n    });\n    $('#ticket_date').on('change', function () {\n      $(\"#firstPaymentDueDate\").val(moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1, 'month').format('MM/DD/YYYY'));\n      ticket_info.calculateTreatmentEndDate();\n    });\n    $('input:radio[name=\"treatment_type\"]').change(function (e) {\n      //console.log(e.target.value);\n      $('#selected_tt_id').val(e.target.value);\n    });\n    $('#products-rows tr select').change(function (e) {\n      e.stopImmediatePropagation();\n      var product_id = e.target.value;\n      var products = JSON.parse(document.getElementById('products-rows').dataset.products);\n      var product = products.find(function (p) {\n        return p.id == product_id;\n      });\n      var amount = product.amount;\n      var price = product.price;\n      amount = parseFloat(amount).toFixed(0);\n      price = parseFloat(price).toFixed(2);\n      var row = e.target.parentNode.parentNode;\n      var tds = row.querySelectorAll(\"td\");\n      var id = row.id.split('_')[1];\n      tds[1].innerHTML = \"<input value=\\\"\".concat(amount, \"\\\" id=\\\"product_\").concat(id, \"_amount\\\" name=\\\"product_\").concat(id, \"_amount\\\" class=\\\"form-control numeric\\\" />\");\n      tds[2].innerHTML = \"<input value=\\\"\".concat(price, \"\\\"  id=\\\"product_\").concat(id, \"_price\\\" name=\\\"product_\").concat(id, \"_price\\\"  class=\\\"form-control currency\\\" />\");\n      $(\"body #product_\".concat(id, \"_price\")).inputmask({\n        alias: 'currency',\n        prefix: '$',\n        removeMaskOnSubmit: true\n      });\n      $(\"body #product_\".concat(id, \"_amount\")).inputmask({\n        alias: 'numeric',\n        removeMaskOnSubmit: true\n      });\n      ticket_info.calculateTreatmentEndDate();\n      ticket_info.total();\n    });\n\n    try {\n      $(document).ready(function () {\n        var ticket = $(\"[data-ticket]\").data('ticket');\n\n        if (ticket) {\n          if (ticket.revisit) {\n            var form = $(\".forms\");\n            form.find('input').prop('disabled', true);\n            form.find('select').prop('disabled', true);\n            form.find('button').prop('disabled', true);\n          }\n        }\n\n        $(\"body input.services_price\").inputmask({\n          alias: 'currency',\n          prefix: '$',\n          removeMaskOnSubmit: true\n        });\n      });\n      this.productTable();\n      this.onProductsChange();\n      this.watch(document.getElementById('products-rows'));\n      $(\"#apdov\").keyup(function () {\n        ticket_info.total();\n      });\n      $('.services').change(function (e) {\n        var service = e.target;\n        var inputPrice = service.nextElementSibling;\n        inputPrice.value = parseFloat(service.dataset.price).toFixed(2);\n        inputPrice.disabled = !inputPrice.disabled;\n        ticket_info.total();\n      });\n      this.total();\n      this.pay_increments();\n      $(function () {\n        $(\"[id^='delete']\").click( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(e) {\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    bootbox.confirm({\n                      message: \"Are you sure you want to delete this product?\",\n                      buttons: {\n                        cancel: {\n                          label: 'Cancel',\n                          className: 'btn-secondary'\n                        },\n                        confirm: {\n                          label: 'Yes',\n                          className: 'btn-primary'\n                        }\n                      },\n                      callback: function () {\n                        var _callback = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(result) {\n                          var close, row, rows, trs, ticketData, treatmentType;\n                          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  close = this.find('.close'); //user want disable\n\n                                  if (!result) {\n                                    _context.next = 13;\n                                    break;\n                                  }\n\n                                  // let x = await window.confirm(\"Are you sure?\");\n                                  row = e.target.parentNode.parentNode;\n                                  _context.next = 5;\n                                  return row.parentNode;\n\n                                case 5:\n                                  rows = _context.sent;\n                                  row.remove();\n                                  trs = null;\n\n                                  if (rows) {\n                                    trs = rows.querySelectorAll('tr');\n                                  }\n\n                                  if (!trs.length) {\n                                    rows.innerHTML = \"\\n                                        <tr class=\\\"bg-light product-table-message\\\">\\n                                            <td colspan=\\\"5\\\">\\n                                                <small>No sold items dectected, Press the 'Add' button below to get started</small>\\n                                            </td>\\n                                        </tr>\\n                                    \";\n                                    ticketData = JSON.parse(document.getElementById('page_header').dataset.ticket);\n                                    treatmentType = ticketData.treatment_type_id;\n                                    $(\"treatment_type-\".concat(treatmentType)).prop('checked', true);\n                                    $('#recommended_treatment').removeClass('d-none');\n                                  }\n\n                                  ticket_info.calculateTreatmentEndDate();\n                                  ticket_info.total();\n                                  ;\n\n                                case 13:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee, this);\n                        }));\n\n                        function callback(_x2) {\n                          return _callback.apply(this, arguments);\n                        }\n\n                        return callback;\n                      }()\n                    });\n\n                  case 1:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      });\n      $('.submit-buttons').on('click', function (e) {\n        e.preventDefault();\n        var bal = $('#bdv').val();\n\n        if ($('#payment_increments').val() == '' && bal.replace(/[^\\d.-]/g, '') > 0) {\n          bootbox.confirm({\n            message: \"There's still a balance of \".concat(bal, \" on this ticket, are you sure you want to save it?\"),\n            buttons: {\n              cancel: {\n                label: 'Cancel',\n                className: 'btn-secondary'\n              },\n              confirm: {\n                label: 'Yes',\n                className: 'btn-primary'\n              }\n            },\n            callback: function callback(result) {\n              if (result) {\n                var submitBtn = $('#ticket_form').find('.submit-buttons');\n                submitBtn.prop('disabled', true).text('Processing...');\n                ticket_info.submitForm();\n              }\n            }\n          });\n        } else {\n          var submitBtn = $('#ticket_form').find('.submit-buttons');\n          submitBtn.prop('disabled', true).text('Processing...');\n          ticket_info.submitForm();\n        }\n      });\n    } catch (e) {}\n\n    this.dataTable();\n    var pi = $(\"[name='payment_increments']\");\n    pi.ready( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(e) {\n        var ticket, options;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return pi.data('update');\n\n              case 2:\n                ticket = _context3.sent;\n\n                if (ticket) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                _context3.next = 7;\n                return pi.find(\"option[value$='\".concat(ticket.month_plan, \"']\")).get(0);\n\n              case 7:\n                options = _context3.sent;\n\n                if (options) {\n                  _context3.next = 12;\n                  break;\n                }\n\n                $(\"#firstPaymentDueDate\").val(moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1, 'month').format('MM/DD/YYYY'));\n                $('.firstPaymentDue').addClass('d-none');\n                return _context3.abrupt(\"return\");\n\n              case 12:\n                options.selected = true;\n                options = $(options);\n                if (!options.val()) $('.firstPaymentDue').addClass('d-none');\n                if (options.val() == '0,full') $('.firstPaymentDue').addClass('d-none');\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    pi.change(function (e) {\n      var value = e.target.value;\n      var firstPaymentDue = $(\".firstPaymentDue\");\n\n      if (value && value != '0,full') {\n        $(\"#firstPaymentDueDate\").val(moment__WEBPACK_IMPORTED_MODULE_2___default()().add(1, 'month').format('MM/DD/YYYY'));\n      } else if (value && value === '0,full') {\n        $('#apdov').val($('#total').val());\n        ticket_info.total();\n        return firstPaymentDue.addClass('d-none');\n      }\n\n      return firstPaymentDue.removeClass('d-none');\n    });\n  },\n  productTable: function productTable() {\n    var trigger = $(\"#addNewFormRowForProductsTable\");\n    var target = $(\"#products-rows\");\n    var edit = target.data('edit');\n    var firstTime = 1;\n    trigger.click(function () {\n      $('#empty_row').remove();\n      var products = target.data('products');\n      var storeApi = target.data('store');\n      var token = target.data('token');\n      var id = Math.random().toString(36).substr(2, 9);\n      var deleteBtn = \"delete-\".concat(id);\n      $(\".product-table-message\").remove();\n      var options = '';\n      $('#recommended_treatment').addClass('d-none');\n\n      if (products.length) {\n        products.forEach(function (p) {\n          options += \"<option value=\\\"\".concat(p.id, \"\\\">\").concat(p.name, \"</option>\");\n        });\n        var selectId = \"product_\".concat(id, \"_select\");\n        var html = \"\\n                  <tr id=\\\"product_\".concat(id, \"\\\">\\n                      <td><select name=\\\"product_\").concat(id, \"_select\\\"  id=\\\"\").concat(selectId, \"\\\" class='form-control'>\").concat(options, \"</select></td>\\n                      <td class=\\\"amount-node\\\">\\n                          <input type=\\\"text\\\" value=\\\"\").concat(parseFloat(products[0].amount).toFixed(0), \"\\\" id=\\\"product_\").concat(id, \"_amount\\\" name=\\\"product_\").concat(id, \"_amount\\\" type=\\\"text\\\" class=\\\"form-control numeric\\\" />\\n                      </td>\\n                      <td class=\\\"price-node\\\">\\n                          <input type=\\\"text\\\" value=\\\"\").concat(parseFloat(products[0].price).toFixed(2), \"\\\" id=\\\"product_\").concat(id, \"_price\\\" name=\\\"product_\").concat(id, \"_price\\\" type=\\\"text\\\"  class=\\\"form-control currency\\\" />\\n                      </td>\\n\\n                      <td><a class='link text-primary c-p' id=\\\"\").concat(deleteBtn, \"\\\">Delete</a></td>\\n                  </tr>\\n              \");\n\n        if (!edit) {\n          if (firstTime) target.html(\"\");\n          firstTime = 0;\n        }\n\n        target.append(html);\n        $(\"body #product_\".concat(id, \"_price\")).inputmask({\n          alias: 'currency',\n          prefix: '$',\n          removeMaskOnSubmit: true\n        });\n        $(\"body #product_\".concat(id, \"_amount\")).inputmask({\n          alias: 'numeric',\n          removeMaskOnSubmit: true\n        });\n        $(\"#\".concat(selectId)).change(function (e) {\n          e.stopImmediatePropagation();\n          var product_id = e.target.value;\n          var product = products.find(function (p) {\n            return p.id == product_id;\n          });\n          var amount = product.amount;\n          var price = product.price;\n          amount = parseFloat(amount).toFixed(0);\n          price = parseFloat(price).toFixed(2);\n          var row = e.target.parentNode.parentNode;\n          var id = row.id.split('_')[1];\n          var tds = row.querySelectorAll(\"td\");\n          var selected = $(tds[0]).find(\"select\").val();\n          tds[1].innerHTML = \"<input value=\\\"\".concat(amount, \"\\\" id=\\\"product_\").concat(id, \"_amount\\\" name=\\\"product_\").concat(id, \"_amount\\\" type=\\\"text\\\" class=\\\"form-control numeric\\\" />\");\n          tds[2].innerHTML = \"<input value=\\\"\".concat(price, \"\\\" id=\\\"product_\").concat(id, \"_price\\\" name=\\\"product_\").concat(id, \"_price\\\" type=\\\"text\\\" class=\\\"form-control currency\\\" />\");\n          var total = ticket_info.total();\n          ticket_info.calculateTreatmentEndDate();\n          $(\"body #product_\".concat(id, \"_price\")).inputmask({\n            alias: 'currency',\n            prefix: '$',\n            removeMaskOnSubmit: true\n          });\n          $(\"body #product_\".concat(id, \"_amount\")).inputmask({\n            alias: 'numeric',\n            removeMaskOnSubmit: true\n          });\n        });\n        ticket_info.total();\n        $(\"#\".concat(deleteBtn)).click( /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(e) {\n            return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    bootbox.confirm({\n                      message: \"Are you sure you want to delete this product?\",\n                      buttons: {\n                        cancel: {\n                          label: 'Cancel',\n                          className: 'btn-secondary'\n                        },\n                        confirm: {\n                          label: 'Yes',\n                          className: 'btn-primary'\n                        }\n                      },\n                      callback: function () {\n                        var _callback2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4(result) {\n                          var trs;\n                          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n                            while (1) {\n                              switch (_context4.prev = _context4.next) {\n                                case 0:\n                                  if (result) {\n                                    e.target.parentNode.parentNode.remove();\n                                    trs = target[0].querySelectorAll('tr');\n\n                                    if (!trs.length) {\n                                      target.html(\"\\n                                        <tr class=\\\"bg-light product-table-message\\\">\\n                                            <td colspan=\\\"5\\\">\\n                                                <small>No Sold Items dectected, Press the 'Add' button below to get started</small>\\n                                            </td>\\n                                        </tr>\");\n                                      $('#recommended_treatment').removeClass('d-none');\n                                    }\n\n                                    ticket_info.calculateTreatmentEndDate();\n                                    ticket_info.total();\n                                  }\n\n                                case 1:\n                                case \"end\":\n                                  return _context4.stop();\n                              }\n                            }\n                          }, _callee4);\n                        }));\n\n                        function callback(_x5) {\n                          return _callback2.apply(this, arguments);\n                        }\n\n                        return callback;\n                      }()\n                    });\n\n                  case 1:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          }));\n\n          return function (_x4) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n      }\n    });\n  },\n  submitForm: function () {\n    var _submitForm = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6() {\n      var form, route, formData, obj, servicesObj, productArr, _iterator, _step, pair, serviceId, receivable, servicePrice, id, product_id, price, amount, options, resp, str;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              $('.invalid-feedback').remove();\n              form = $('#ticket_form');\n              route = form.data('action');\n              formData = new FormData(document.getElementById('ticket_form'));\n              obj = {};\n              servicesObj = {};\n              productArr = [];\n              _iterator = _createForOfIteratorHelper(formData.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  pair = _step.value;\n\n                  if (pair[0] === 'services') {\n                    serviceId = pair[1];\n                    receivable = $(\"#service_\".concat(serviceId)).data('receivable');\n\n                    if (receivable) {\n                      servicePrice = $(\"#service_\".concat(serviceId, \"_price\")).val().replace(/[^\\d.-]/g, '');\n                      servicesObj[serviceId] = servicePrice;\n                    } else {\n                      servicesObj[serviceId] = 0;\n                    }\n                  } else if (pair[0].startsWith('product_')) {\n                    id = pair[0].split('_')[1];\n                    product_id = $(\"#product_\".concat(id, \"_select\")).val();\n                    price = $(\"#product_\".concat(id, \"_price\")).val();\n                    amount = $(\"#product_\".concat(id, \"_amount\")).val();\n\n                    if (price) {\n                      price = price.replace(/[^\\d.-]/g, '');\n                    }\n\n                    productArr.push({\n                      product_id: product_id,\n                      custom_amount: amount,\n                      custom_price: price\n                    });\n                    formData[\"delete\"](\"product_\".concat(id, \"_select\"));\n                    formData[\"delete\"](\"product_\".concat(id, \"_amount\"));\n                    formData[\"delete\"](\"product_\".concat(id, \"_price\"));\n                  } else {\n                    if (pair[1].includes('$')) {\n                      obj[pair[0]] = pair[1].replace(/[^\\d.-]/g, '');\n                    } else {\n                      obj[pair[0]] = pair[1];\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              if (obj.amount_paid_during_office_visit == '') {\n                obj.amount_paid_during_office_visit = '0.00';\n              }\n\n              obj['services'] = servicesObj;\n              obj['products'] = productArr;\n\n              if (!obj.treatment_end_date) {\n                obj.treatment_end_date = $('#treatment_end_date').val();\n              }\n\n              if (!obj.total) {\n                obj.total = $('#total').val();\n              }\n\n              if (!obj.balanc_during_visit) {\n                obj.balanc_during_visit = $('#balanc_during_visit').val();\n              }\n\n              if (!obj.amount_paid_during_office_visit) {\n                obj.amount_paid_during_office_visit = $('#amount_paid_during_office_visit').val();\n              }\n\n              obj.treatment_type_id = $('#selected_tt_id').val();\n              obj.payment_increments = $('#payment_increments').val();\n              options = {\n                method: 'post',\n                url: route,\n                data: obj,\n                xsrfHeaderName: 'X-XSRF-TOKEN',\n                headers: {\n                  'X-CSRF-TOKEN': document.querySelector('meta[name=\"token\"]').getAttribute('content')\n                }\n              };\n              _context6.prev = 19;\n              _context6.next = 22;\n              return axios(options);\n\n            case 22:\n              resp = _context6.sent;\n\n              //console.log(resp)\n              if (resp.status === 200) {\n                str = route.includes('create') ? 'created' : 'updated';\n                location.replace(_helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + \"/tickets?\".concat(str));\n              }\n\n              _context6.next = 30;\n              break;\n\n            case 26:\n              _context6.prev = 26;\n              _context6.t0 = _context6[\"catch\"](19);\n\n              if (_context6.t0.response.status === 422) {\n                $('.invalid-feedback').remove();\n                $.each(_context6.t0.response.data.errors, function (key, value) {\n                  $.each(value, function (k, v) {\n                    $('<span class=\"invalid-feedback d-block\" role=\"alert\"><strong>' + v + '</strong></span>').appendTo('#form_errors');\n                  });\n                });\n                $('.submit-buttons').prop('disabled', false).text('Save Changes');\n              }\n\n              if (_context6.t0.response.status === 419) {\n                window.history.replaceState(null, '', _helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl() + '/login');\n              }\n\n            case 30:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[19, 26]]);\n    }));\n\n    function submitForm() {\n      return _submitForm.apply(this, arguments);\n    }\n\n    return submitForm;\n  }(),\n  calculateTreatmentEndDate: function calculateTreatmentEndDate() {\n    if ($('#total').val().replace(/[^\\d.-]/g, '') < 0) {\n      $('#treatment_end_date').val($('#ticket_date').val());\n    } else {\n      var maxDuration = null;\n      var durations = [];\n      var products = JSON.parse(document.getElementById('products-rows').dataset.products);\n      $('#products-rows tr').each(function () {\n        var selectedOption = $(this).find('select option:selected').val();\n        var product = products.find(function (p) {\n          return p.id == selectedOption;\n        });\n        var productType = null;\n\n        if (product == undefined || product == null) {\n          productType = 'none';\n        } else {\n          productType = product.product_type.description;\n        }\n\n        if (productType == 'ESWT') {\n          durations.push(3);\n        } else {\n          durations.push($(this).find('td.amount-node > input').val());\n        }\n      });\n      maxDuration = Math.max.apply(Math, durations);\n      var date = $('#ticket_date').val();\n      var momentDate = moment__WEBPACK_IMPORTED_MODULE_2___default()(date, 'MM-DD-YYYY');\n      var newDate = momentDate.add(maxDuration, 'months');\n      $('#treatment_end_date').val(newDate.format('MM/DD/YYYY'));\n    }\n  },\n  onProductsChange: function onProductsChange() {\n    var products = JSON.parse(document.getElementById('products-rows').dataset.products);\n  },\n  watch: function watch(target) {\n    // Select the node that will be observed for mutations\n    var targetNode = target;\n    var onProductsChange = this.onProductsChange;\n    var total = this.total; // Options for the observer (which mutations to observe)\n\n    var config = {\n      attributes: true,\n      childList: true,\n      subtree: true\n    }; // Callback function to execute when mutations are observed\n\n    var callback = function callback(mutationsList, observer) {\n      onProductsChange();\n      var nodes = mutationsList[0].addedNodes;\n      nodes.forEach(function (n) {\n        if (n.localName == 'tr') {\n          var products = JSON.parse(document.getElementById('products-rows').dataset.products);\n          var select = $(n).find('select').get(0);\n          var first_option = $(select).find('option').get(0);\n          var product_id = first_option.value;\n          var product = products.find(function (p) {\n            return p.id == product_id;\n          });\n          var amount = product.amount;\n          var price = product.price;\n          var row = n;\n          var id = n.id.split('_')[1];\n          var tds = row.querySelectorAll(\"td\");\n          tds[1].innerHTML = \"<input value=\\\"\".concat(parseFloat(amount).toFixed(0), \"\\\" id=\\\"product_\").concat(id, \"_amount\\\" name=\\\"product_\").concat(id, \"_amount\\\" type=\\\"text\\\" class=\\\"form-control numeric\\\" />\");\n          tds[2].innerHTML = \"<input value=\\\"\".concat(parseFloat(price).toFixed(2), \"\\\"  id=\\\"product_\").concat(id, \"_price\\\" name=\\\"product_\").concat(id, \"_price\\\"  type=\\\"text\\\" class=\\\"form-control currency\\\" />\");\n          $(\"body #product_\".concat(id, \"_price\")).inputmask({\n            alias: 'currency',\n            prefix: '$',\n            removeMaskOnSubmit: true\n          });\n          $(\"body #product_\".concat(id, \"_amount\")).inputmask({\n            alias: 'numeric',\n            removeMaskOnSubmit: true\n          });\n          ticket_info.total();\n          $('[id^=\"delete-\"]').click(function () {\n            ticket_info.total();\n          });\n        }\n      });\n    }; // Create an observer instance linked to the callback function\n\n\n    var observer = new MutationObserver(callback); // Start observing the target node for configured mutations\n\n    observer.observe(targetNode, config);\n  },\n  getTotalProducts: function getTotalProducts() {\n    var rows = document.querySelector('#products-rows').querySelectorAll('tr');\n    var totalProduct = 0;\n    rows.forEach( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee7(row) {\n        var tds, amount, price;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                tds = row.querySelectorAll('td');\n\n                if (!(!tds[1] || !tds[2])) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 3:\n                amount = tds[1].querySelector('input').value;\n                price = tds[2].querySelector('input').value.replace(/[^\\d.-]/g, '');\n                amount = parseFloat(amount);\n                price = parseFloat(price);\n                totalProduct += price;\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x6) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n    return totalProduct;\n  },\n  getTotalServices: function getTotalServices() {\n    var selectedServices = document.querySelectorAll(\".services\");\n    var totalServices = 0;\n    selectedServices.forEach(function (service) {\n      var receivable = parseInt(service.dataset.receivable);\n      if (!receivable) return;\n      var nextElement = service.nextElementSibling;\n\n      if (service.checked) {\n        totalServices += parseFloat(nextElement.value.replace(/[^\\d.-]/g, ''));\n      }\n    });\n    return totalServices;\n  },\n  total: function () {\n    var _total = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee8() {\n      var t1, t2, total, apdov, bdv_amount;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              t1 = this.getTotalProducts();\n              t2 = this.getTotalServices();\n              total = t1 + t2;\n              $(\"[name='total']\").val(total.toFixed(2));\n              apdov = $(\"#apdov\").val().replace(/[^\\d.-]/g, '');\n              apdov = apdov ? parseFloat(apdov) : 0;\n              bdv_amount = total - apdov;\n              bdv_amount = bdv_amount.toFixed(2); // console.log('total: ' + total.toFixed(2));\n              // console.log('amount paid during visit: ' + apdov);\n              // console.log('balance due: ' + bdv_amount);\n\n              $(\"#bdv\").val(bdv_amount);\n\n              if (total == 0) {\n                $(\"#reschedule_cancellation_btn\").removeClass('d-none');\n              } else {\n                $(\"#reschedule_cancellation_btn\").addClass('d-none');\n              }\n\n              if (total < 0) {\n                ticket_info.calculateTreatmentEndDate();\n              }\n\n              this.pay_increments();\n\n              if (total == apdov) {\n                $('#payment_increments').val('0,full');\n              }\n\n              return _context8.abrupt(\"return\", total);\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, this);\n    }));\n\n    function total() {\n      return _total.apply(this, arguments);\n    }\n\n    return total;\n  }(),\n  pay_increments: function pay_increments() {\n    var balance = $(\"[name='balanc_during_visit']\").val().replace(/[^\\d.-]/g, '');\n    var pi = $(\"#payment_increments\");\n    pi.html(\"\\n                <option value=\\\"\\\">Select Increments</option>\\n                <option value=\\\"0,full\\\">Paid In Full</option>\\n        \");\n\n    for (var index = 1; index < 25; index++) {\n      var amount = (parseFloat(balance) / index).toFixed(2);\n      pi.append(\"<option value=\\\"\".concat(amount, \",\").concat(index, \"\\\">\").concat(index, \" Month\").concat(index > 1 ? 's' : '', \" - $\").concat(amount, \"</option>\"));\n    }\n  },\n  dataTable: function () {\n    var _dataTable = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee9() {\n      var appUrl, dataSource, editApi, td;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              appUrl = _helper__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getSiteUrl();\n              dataSource = appUrl + '/tickets';\n              editApi = appUrl + '/edit/ticket/';\n\n              if (window.location.search.substring(1) === 'created') {\n                toastr__WEBPACK_IMPORTED_MODULE_3___default.a.success('Ticket created', 'Success', {\n                  timeOut: 4000\n                });\n                window.history.replaceState(null, '', dataSource);\n              }\n\n              if (window.location.search.substring(1) === 'updated') {\n                toastr__WEBPACK_IMPORTED_MODULE_3___default.a.success('Ticket updated', 'Success', {\n                  timeOut: 4000\n                });\n                window.history.replaceState(null, '', dataSource);\n              }\n\n              _context9.next = 7;\n              return $('#ticketsDatatable').DataTable({\n                processing: true,\n                serverSide: true,\n                ajax: dataSource,\n                columns: [{\n                  data: \"id\",\n                  render: function render(v, x, rowData) {\n                    return \"<a href=\\\"\".concat(editApi + v, \"\\\"\\n                                   have-products=\\\"\").concat(rowData.count_product, \"\\\"\\n                                   remaining_balance=\\\"\").concat(rowData.remaining_balance, \"\\\"\\n                                   have_refill=\\\"\").concat(rowData.have_refill, \"\\\"\\n                        >\").concat(v, \"</a>\");\n                  }\n                }, // 0\n                {\n                  data: \"date\"\n                }, // 1\n                {\n                  data: \"patient_name\"\n                }, // 2\n                {\n                  data: \"user_name\"\n                }, // 3\n                {\n                  data: \"total\",\n                  render: function render(v) {\n                    var value = parseFloat(v);\n                    if (value) return \"$\" + value.toFixed(2);\n                    return v;\n                  }\n                }, // 4\n                {\n                  data: \"remaining_balance\",\n                  render: function render(v) {\n                    v = parseFloat(v);\n                    v = \"$\" + v.toFixed(2);\n                    return v;\n                  }\n                } // 5\n                ]\n              }).on('draw.dt', function () {\n                var rows = document.querySelectorAll('#ticketsDatatable td  a[remaining_balance]');\n                rows.forEach(function (row) {\n                  var remaining_balance = parseFloat(row.getAttribute('remaining_balance'));\n\n                  if (remaining_balance == 0) {\n                    var tr = row.parentElement.parentElement;\n                    tr.classList.remove('bg-light-danger');\n                    tr.classList.add('bg-light-success');\n                  }\n                });\n                rows = document.querySelectorAll('#ticketsDatatable td  a[have_refill]');\n                rows.forEach(function (row) {\n                  var refill = parseInt(row.getAttribute('have_refill'));\n\n                  if (refill) {\n                    var tr = row.parentElement.parentElement;\n                    tr.classList.remove('bg-light-danger');\n                    tr.classList.remove('bg-light-success');\n                    tr.classList.add('bg-light-warning');\n                  }\n                });\n                rows = document.querySelectorAll('#ticketsDatatable td  a[have-products]');\n                rows.forEach(function (row) {\n                  var haveProduct = parseInt(row.getAttribute('have-products'));\n\n                  if (!haveProduct) {\n                    var tr = row.parentElement.parentElement;\n                    tr.classList.add('bg-light-danger');\n                  }\n                });\n              });\n\n            case 7:\n              td = _context9.sent;\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    function dataTable() {\n      return _dataTable.apply(this, arguments);\n    }\n\n    return dataTable;\n  }()\n};\nticket_info.init();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/tickets.js\n");

/***/ }),

/***/ 8:
/*!***************************************!*\
  !*** multi ./resources/js/tickets.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\GithubRepository\pryapus\resources\js\tickets.js */"./resources/js/tickets.js");


/***/ })

},[[8,"/js/manifest","/js/vendor"]]]);