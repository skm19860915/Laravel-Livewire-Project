{"version":3,"sources":["webpack:///./resources/js/dashboard.js","webpack:///./resources/js/helper.js"],"names":["dashboardJS","init","console","log","$","types","document","querySelector","querySelectorAll","forEach","type","selectedTypes","addEventListener","e","a","_type","checked","push","parseInt","value","Set","removeItemAll","prop","clas","arr","i","length","splice","helper","getSiteUrl","window","location","origin","loadStates","statesJsonFile","this","getJSON","data","items","each","key","row","selected","state_code","state_name","html","join","append","isSafariBrowser","chromeAgent","navigator","userAgent","indexOf","safariAgent"],"mappings":"suCAEA,IAAIA,EAAc,CAEhBC,KAAM,WAEAC,QAAQC,IAAR,aAEAC,GAAE,WAEE,IAAIC,EAAQC,SAASC,cAAT,gCAAuDC,iBAAvD,SACZH,EAAMI,SAAQ,SAAAC,GACV,IAAIC,EAAgB,GACpBD,EAAKE,iBAAiB,SAAtB,6BAA+B,WAAMC,GAAN,SAAAC,EAAA,sEACET,EACAI,QADA,6BACQ,WAAMM,GAAN,SAAAD,EAAA,0DACdC,EAAMC,QADQ,uBAIzBL,EAAcM,KAAKC,SAASH,EAAMI,QAJT,WAKC,IAAIC,IAAIT,IALT,OAKzBA,EALyB,+CAOHX,EAAYqB,cAAcV,EAAeO,SAASH,EAAMI,QAPrD,QAOzBR,EAPyB,mDADR,uDADF,gCAcJ,IAAIS,IAAIT,IAdJ,OAc/BA,EAd+B,OAiBRP,EAAE,iBAAiBkB,KAAK,QAAQ,2BACnDpB,QAAQC,IAAIQ,GACZA,EAAcF,SAAQ,SAAAC,GAClB,IAAMa,EAAO,sBAAH,OAAyBb,GACnCN,EAAEmB,GAAMD,KAAK,QAAQ,8BArBE,2CAA/B,8DA6BZD,cAAc,SAASG,EAAKL,GAEhB,IADA,IAAIM,EAAI,EACDA,EAAID,EAAIE,QACPF,EAAIC,KAAON,EACfK,EAAIG,OAAOF,EAAG,KAEZA,EAGN,OAAOD,IAOvBxB,EAAYC,Q,kCC1DZ,qBAEI2B,EAAS,CAEXC,WAAY,WACV,OAAOC,OAAOC,SAASC,QAGzBC,WAAY,WACV,IAAIC,EAAiB,GAAH,OAAMC,KAAKN,aAAX,wBAClBzB,EAAEgC,QAAQF,GAAgB,SAAUG,GAClC,IAAIC,EAAQ,GACZlC,EAAEmC,KAAKF,GAAM,SAAUG,EAAKC,GAC1B,IAAIC,EAAW,GACXtC,EAAE,UAAUiC,KAAK,UAAYI,EAAIE,aACnCD,EAAW,YAEbJ,EAAMrB,KAAN,yBAA6BwB,EAAIE,WAAjC,aAAgDD,EAAhD,YAA4DD,EAAIG,WAAhE,iBAGF,IAAIC,EAAOP,EAAMQ,KAAK,IACtB1C,EAAE,UAAU2C,OAAOF,OAIvBG,gBAAiB,WACf,IAAIA,GAAkB,EAClBC,EAAcC,UAAUC,UAAUC,QAAQ,WAAa,EACvDC,EAAcH,UAAUC,UAAUC,QAAQ,WAAa,EAK3D,OAJKH,GAAeI,IAClBL,GAAkB,GAGbA,IAKIpB,c","file":"/js/dashboard.js","sourcesContent":["// require('./app');\nimport helper from './helper';\nlet dashboardJS = {\n\n  init: function(){\n\n        console.log(`Dashboard`);\n\n        $(() => {\n\n            let types = document.querySelector(`#appointment-types-checkboxs`).querySelectorAll(`input`);\n            types.forEach(type => {\n                let selectedTypes = [];\n                type.addEventListener('change',async e => {\n                    let getSelectedTypes = await types\n                                                .forEach(async _type => {\n                            let selected = _type.checked\n                            // console.log(selected,'  ',_type.value);\n                            if (selected) {\n                                selectedTypes.push(parseInt(_type.value))\n                                selectedTypes = await [...new Set(selectedTypes)];\n                            } else {\n                                selectedTypes = await dashboardJS.removeItemAll(selectedTypes, parseInt(_type.value));\n                            }\n\n                        })\n\n                selectedTypes =  await [...new Set(selectedTypes)]\n\n                    //filter types\n                    let appointments = $(`.appointments`).prop('style','display:none !important');\n                    console.log(selectedTypes);\n                    selectedTypes.forEach(type => {\n                        const clas = `.appointment-types-${type}`;\n                        $(clas).prop('style','display:flex !important');\n\n                    })\n\n            })\n            })\n        })\n    },\n    removeItemAll:function(arr, value) {\n                var i = 0;\n                while (i < arr.length) {\n                    if (arr[i] === value) {\n                    arr.splice(i, 1);\n                    } else {\n                    ++i;\n                    }\n                }\n                return arr;\n                }\n\n\n\n}\n\ndashboardJS.init();\n\n","import axios from \"axios\";\n\nvar helper = {\n\n  getSiteUrl: function () {\n    return window.location.origin;\n  },\n\n  loadStates: function () {\n    let statesJsonFile = `${this.getSiteUrl()}/storage/states.json`;\n    $.getJSON(statesJsonFile, function (data) {\n      let items = [];\n      $.each(data, function (key, row) {\n        let selected = '';\n        if ($('#state').data('value') == row.state_code) {\n          selected = 'selected';\n        }\n        items.push(`<option value=\"${row.state_code}\" ${selected}>${row.state_name}</option>`);\n      });\n\n      let html = items.join(\"\");\n      $('#state').append(html);\n    });\n  },\n\n  isSafariBrowser: function () {\n    let isSafariBrowser = false;\n    let chromeAgent = navigator.userAgent.indexOf(\"Chrome\") > -1;\n    let safariAgent = navigator.userAgent.indexOf(\"Safari\") > -1;\n    if (!chromeAgent && safariAgent) {\n      isSafariBrowser = true;\n    }\n\n    return isSafariBrowser;\n  },\n\n}\n\nexport default helper;\n"],"sourceRoot":""}