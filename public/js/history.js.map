{"version":3,"sources":["webpack:///./resources/js/helper.js","webpack:///./resources/js/history.js"],"names":["helper","getSiteUrl","window","location","origin","loadStates","statesJsonFile","this","$","getJSON","data","items","each","key","row","selected","state_code","push","state_name","html","join","append","isSafariBrowser","chromeAgent","navigator","userAgent","indexOf","safariAgent","init","console","log","dataTable","appUrl","dataSource","editApi","DataTable","processing","serverSide","ajax","columns","render","type","expandHtml","id","v","x","rowData","count_product","remaining_balance","have_refill","value","parseFloat","toFixed","columnDefs","targets","orderable","on","rows","document","querySelectorAll","forEach","parseInt","getAttribute","parentElement","classList","add","tr","remove","e","target","siblings","find","removeClass","addClass"],"mappings":"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","file":"/js/history.js","sourcesContent":["import axios from \"axios\";\n\nvar helper = {\n\n  getSiteUrl: function () {\n    return window.location.origin;\n  },\n\n  loadStates: function () {\n    let statesJsonFile = `${this.getSiteUrl()}/storage/states.json`;\n    $.getJSON(statesJsonFile, function (data) {\n      let items = [];\n      $.each(data, function (key, row) {\n        let selected = '';\n        if ($('#state').data('value') == row.state_code) {\n          selected = 'selected';\n        }\n        items.push(`<option value=\"${row.state_code}\" ${selected}>${row.state_name}</option>`);\n      });\n\n      let html = items.join(\"\");\n      $('#state').append(html);\n    });\n  },\n\n  isSafariBrowser: function () {\n    let isSafariBrowser = false;\n    let chromeAgent = navigator.userAgent.indexOf(\"Chrome\") > -1;\n    let safariAgent = navigator.userAgent.indexOf(\"Safari\") > -1;\n    if (!chromeAgent && safariAgent) {\n      isSafariBrowser = true;\n    }\n\n    return isSafariBrowser;\n  },\n\n}\n\nexport default helper;\n","// require('./app');\nimport helper from './helper';\n\nlet historyJS = {\n\n  init: function(){\n\n        console.log(\"history\");\n        this.dataTable()\n\n    },\n\n    dataTable: () => {\n        const appUrl = helper.getSiteUrl();\n        const patient_id = $('#ticketsDatatable').data('patient');\n        const dataSource = appUrl + '/patient/tickets/'+patient_id;\n        const editApi  = appUrl + '/edit/ticket/'\n        $('#ticketsDatatable').DataTable({\n            processing: true,\n            serverSide: true,\n            ajax: dataSource,\n            columns: [\n                {\n                    data: \"action\", render: (data, type, row) => {\n                        let expandHtml = '';\n                        if(data){\n                            expandHtml = `\n                                <button type=\"button\" class=\"btn btn-info btn-sm px-1 py-0\" data-toggle=\"collapse\" data-target=\"#collapsed${row.id}\">\n                                    <i class=\"fa fa-plus text-white text-120\"></i>\n                                </button>\n                                <div id=\"collapsed${row.id}\" class=\"collapse bg-white\" style=\"width: auto; font-size:13px;\">\n                                    Purchased:<br>\n                                    <ul class=\"ml-1\">\n                                        ${data}\n                                    </ul>\n                                </div>\n                                `;\n                        }\n\n                        return expandHtml;\n                    }\n                },\n                {\n                    data: \"id\", render: (v, x, rowData) => {\n                        return `<a href=\"${editApi + v}\"\n                                   have-products=\"${rowData.count_product}\"\n                                   remaining_balance=\"${rowData.remaining_balance}\"\n                                   have_refill=\"${rowData.have_refill}\"\n                        >${v}</a>`;\n                    }\n                }, // 0\n                { data: \"date\" }, // 1\n                { data: \"patient_name\"}, // 2\n                { data: \"user_name\"}, // 3\n                {\n                    data: \"total\", render: (v) => {\n                        let value = parseFloat(v);\n                        if (value) return value.toFixed(2);\n                        return v;\n                }  }, // 4\n                {\n                    data: \"remaining_balance\", render: (v) => {\n                        let value = parseFloat(v);\n                        if (value) return \"$\"+value.toFixed(2);\n                        return v;\n                }    }, // 5\n            ],\n            columnDefs: [{\n                targets: 0,\n                orderable:false\n            }]\n        }).on('draw.dt', () => {\n\n            let rows = document.querySelectorAll('#ticketsDatatable td  a[have-products]');\n            rows.forEach(row => {\n                let haveProduct = parseInt(row.getAttribute('have-products'));\n                if (!haveProduct)\n                {\n                    let tr =  row.parentElement.parentElement\n                    tr.classList.add('bg-light-danger');\n                }\n            })\n            rows = document.querySelectorAll('#ticketsDatatable td  a[remaining_balance]');\n            rows.forEach(row => {\n                let remaining_balance = parseFloat(row.getAttribute('remaining_balance'));\n                // console.log(remaining_balance);\n                if (remaining_balance == 0)\n                {\n                    let tr =  row.parentElement.parentElement\n                    tr.classList.remove('bg-light-danger');\n                    tr.classList.add('bg-light-success');\n                }\n            })\n            rows = document.querySelectorAll('#ticketsDatatable td  a[have_refill]');\n            rows.forEach(row => {\n                let refill = parseInt(row.getAttribute('have_refill'));\n                //console.log(refill);\n                if (refill)\n                {\n                    let tr =  row.parentElement.parentElement\n                    tr.classList.remove('bg-light-danger');\n                    tr.classList.remove('bg-light-success');\n                    tr.classList.add('bg-light-warning');\n                }\n            })\n            // console.log(rows);\n\n            $('.collapse').on('shown.bs.collapse', function (e) {\n                let collapseDiv = $(e.target);\n                let collapseBtn = collapseDiv.siblings('button');\n                collapseBtn.find('i').removeClass('fa-plus').addClass('fa-minus');\n            });\n            $('.collapse').on('hidden.bs.collapse', function (e) {\n                let collapseDiv = $(e.target);\n                let collapseBtn = collapseDiv.siblings('button');\n                collapseBtn.find('i').removeClass('fa-minus').addClass('fa-plus');\n            });\n\n        });\n    }\n}\n\nhistoryJS.init();\n\n"],"sourceRoot":""}